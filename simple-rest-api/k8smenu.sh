#!/bin/bash

NAMESPACE="hegdek8s"
MINIKUBE_IP=$(minikube ip)

# Function to get NodePort dynamically
get_node_port() {
    local node_port=$(minikube kubectl -- get service rest-api-service -n $NAMESPACE -o=jsonpath='{.spec.ports[0].nodePort}' 2>/dev/null)
    if [[ -z "$node_port" ]]; then
        echo "‚ùå Error: Could not fetch NodePort. Ensure the service is running."
        return 1
    fi
    echo "$node_port"
}

while true; do
    echo "======================================"
    echo "üöÄ Kubernetes Minikube Management Menu"
    echo "======================================"
    echo "1Ô∏è‚É£  Start Deployment"
    echo "2Ô∏è‚É£  Stop Deployment"
    echo "3Ô∏è‚É£  Delete Deployment"
    echo "4Ô∏è‚É£  Check Status"
    echo "5Ô∏è‚É£  Get Minikube IP"
    echo "6Ô∏è‚É£  Test API - GET /api/data"
    echo "7Ô∏è‚É£  Test API - POST /api/data"
    echo "8Ô∏è‚É£  Exit"
    echo "======================================"
    read -p "üëâ Choose an option: " option

    case $option in
        1)
            echo "üîπ Starting Deployment..."
            ./deploy_k8s.sh  # Run deployment script
            echo "‚úÖ Deployment Started!"
            ;;
        2)
            echo "üõë Stopping Deployment..."
            minikube kubectl -- scale deployment simple-rest-api --replicas=0 -n $NAMESPACE
            minikube kubectl -- scale deployment mongo --replicas=0 -n $NAMESPACE
            echo "‚úÖ Deployment Stopped!"
            ;;
        3)
            echo "üö® Deleting Deployment..."
            minikube kubectl -- delete namespace $NAMESPACE
            echo "‚úÖ Namespace & All Deployments Deleted!"
            ;;
        4)
            echo "üìå Checking Status..."
            minikube kubectl -- get pods -n $NAMESPACE
            ;;
        5)
            echo "üåé Minikube IP: $MINIKUBE_IP"
            ;;
        6)
            NODE_PORT=$(get_node_port)
            if [[ -n "$NODE_PORT" ]]; then
                API_URL="http://localhost:8080/api/data"
                echo "üîπ Testing GET API at $API_URL ..."
                curl -X GET "$API_URL"
            fi
            ;;
        7)
            NODE_PORT=$(get_node_port)
            if [[ -n "$NODE_PORT" ]]; then
                API_URL="http://localhost:8080/api/data"
                echo "üîπ Testing POST API at $API_URL ..."
                curl -X POST "$API_URL" -H "Content-Type: application/json" -d '{"name": "John Dota", "email": "john@example.com"}'
            fi
            ;;
        8)
            echo "üëã Exiting..."
            exit 0
            ;;
        *)
            echo "‚ùå Invalid option, please try again."
            ;;
    esac
done

